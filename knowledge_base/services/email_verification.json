{
  "category": "ALTERNATE DATA SUITE",
  "service_name": "Email Verification",
  "description": "This service verifies the validity and details of a given email address. It provides information such as username, domain, format validity, SMTP availability, DNS validity, and more for alternate data-based verification workflows.",
  "llm_summary": "Email Verification service validates an email address and provides details like username, domain, format validity, and SMTP availability. Useful for alternate data verification, fraud prevention, and compliance workflows.",
  "tags": [
    "email verification",
    "data verification",
    "compliance",
    "onboarding api",
    "secure kyc",
    "identity verification"
  ],
  "use_cases": [
    "Verify the validity of an email address for onboarding workflows.",
    "Support compliance and fraud prevention by validating email information.",
    "Enable alternate data-based KYC processes in financial services and insurance.",
    "Validate email addresses for identity verification workflows in government and private sectors."
  ],
  "request_schema": [
    {
      "field": "email",
      "type": "string",
      "description": "Email address to verify.",
      "validations": {
        "format": "email"
      },
      "required": true
    },
    {
      "field": "consent",
      "type": "boolean",
      "description": "User consent for accessing email verification data",
      "validations": {
        "allowedValues": [true, false]
      },
      "required": true
    }
  ],
  "response_schema": [
    {
      "field": "status",
      "type": "string",
      "description": "Overall status of the API response",
      "validations": {
        "allowedValues": ["success", "error", "failed"]
      },
      "required": true
    },
    {
      "field": "requestId",
      "type": "string",
      "description": "Unique request ID generated by the API",
      "validations": {
        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
      },
      "required": true
    },
    {
      "field": "type",
      "type": "string",
      "description": "Type of verification performed",
      "validations": {
        "allowedValues": ["point"]
      },
      "required": true
    },
    {
      "field": "serviceStatusCode",
      "type": "integer",
      "description": "HTTP status code for the service",
      "validations": {
        "minimum": 100,
        "maximum": 599
      },
      "required": true
    },
    {
      "field": "data",
      "type": "object",
      "description": "Details of the verified email address",
      "properties": {
        "email": {
          "type": "string",
          "description": "The verified email address"
        },
        "username": {
          "type": "string",
          "description": "Username part of the email address"
        },
        "domain": {
          "type": "string",
          "description": "Domain part of the email address"
        },
        "isValidFormat": {
          "type": "boolean",
          "description": "Indicates if the email format is valid"
        },
        "isSmtpAvailable": {
          "type": "boolean",
          "description": "Indicates if SMTP is available for the email"
        },
        "hasValidDns": {
          "type": "boolean",
          "description": "Indicates if the email has valid DNS records"
        },
        "isFreeProvider": {
          "type": "boolean",
          "description": "Indicates if the email is from a free provider"
        },
        "isDisposable": {
          "type": "boolean",
          "description": "Indicates if the email is disposable"
        },
        "isCatchAll": {
          "type": "boolean",
          "description": "Indicates if the email is a catch-all address"
        },
        "mxRecords": {
          "type": "array",
          "description": "List of MX records for the email domain",
          "items": {
            "type": "string"
          }
        }
      },
      "required": true
    },
    {
      "field": "vendorResponse",
      "type": "array",
      "description": "Response details from vendors",
      "items": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "Vendor-specific status code"
          },
          "name": {
            "type": "string",
            "description": "Vendor name"
          },
          "sequence": {
            "type": "integer",
            "description": "Vendor sequence number"
          }
        }
      },
      "required": true
    }
  ],
  "example_request": {
    "input": {
      "email": "akshat.birla@bharatnxt.in",
      "consent": true
    }
  },
  "example_response": {
    "status": "success",
    "requestId": "8c403d05-6c82-439b-b39e-6fbbc08e5538",
    "type": "point",
    "serviceStatusCode": 200,
    "data": {
      "email": "pranilpalan91@gmail.com",
      "username": "pranilpalan91",
      "domain": "gmail.com",
      "isValidFormat": true,
      "isSmtpAvailable": true,
      "hasValidDns": true,
      "isFreeProvider": true,
      "isDisposable": false,
      "isCatchAll": false,
      "mxRecords": [
        "alt1.gmail-smtp-in.l.google.com"
      ]
    },
    "vendorResponse": [
      {
        "statusCode": 200,
        "name": "OnyxWolf",
        "sequence": 1
      }
    ]
  },
  "available_vendors": [
    "OnyxWolf",
    "AzureRaven",
    "IndigoBison",
    "JadeToucan",
    "CobaltEagle",
    "GoldenOtter",
    "SilverTiger",
    "EmeraldWhale",
    "CrimsonFalcon"
  ]
}
